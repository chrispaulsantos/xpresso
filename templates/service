import { Model, model } from 'mongoose';
import { {{pascalSingular}}Document, {{pascalSingular}} } from '../models/{{paramSingular}}';
import { Logger } from './logger';

const LOGGER = Logger.getLogger('{{pascalSingular}}Service');

export class {{pascalPlural}}Service {
    private {{camelSingular}}Model: Model<{{pascalSingular}}Document>;

    constructor() {
        this.{{camelSingular}}Model = model('{{paramPlural}}');
    }

    public async getAll(): Promise<{{pascalSingular}}[]> {
        let {{camelPlural}}: {{pascalSingular}}[] = [];

        try {
            {{camelPlural}} = await this.{{camelSingular}}Model.find({});
        } catch (e) {
            LOGGER.error(e);
            throw e;
        }

        return {{camelPlural}};
    }

    public async create({{camelSingular}}: {{pascalSingular}}): Promise<{{pascalSingular}}> {
        let created{{pascalSingular}}: {{pascalSingular}} = null;

        try {
            created{{pascalSingular}} = await this.{{camelSingular}}Model.create({{camelSingular}});
        } catch (e) {
            LOGGER.error(e);
            throw e;
        }

        return created{{pascalSingular}};
    }
}