import * as express from 'express';
import { Request, Response } from 'express';
import { Logger } from '../services/logger';
{{websocketImport}}

{{authImport}}

import { {{className}}Service } from '../services/{{routeName}}';
import { {{className}} } from '../models/{{routeName}}';

const LOGGER = Logger.getLogger('{{className}}Routes');

export class {{className}}Routes {
    public static initialize(app: Application): void {
        LOGGER.info('Initializing {{className}}Routes');
        let route: {{className}}Routes = new this(app);
        route.bootstrap();
    }

    private app: Application;
    private {{routeName}}Service: {{className}}Service;

    constructor(app: Application) {
        this.app = app;
        this.{{routeName}}Service = new {{className}}Service();
    }

    private bootstrap(): void {
        {{websocketRoute}}

        {{authMiddleware}}

        this.app.get('/{{routeName}}', async (req: Request, res: Response) => {
            const {{routeName}}s: {{className}}[] = await this.{{routeName}}Service.getAll();
            res.status(200).json({ list: {{routeName}}s });
        })
        this.app.post('/{{routeName}}', async (req: Request, res: Response) => {
            res.status(200).end();
        })
        this.app.get('/{{routeName}}/:id', async (req: Request, res: Response) => {
            res.status(200).end();
        })
        this.app.put('/{{routeName}}/:id', async (req: Request, res: Response) => {
            res.status(200).end();
        })
        this.app.delete('/{{routeName}}/:id', async (req: Request, res: Response) => {
            res.status(200).end();
        })
    }
}